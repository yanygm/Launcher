using System;
using System.Runtime.Intrinsics;
using System.Runtime.Intrinsics.X86;
using System.Text;

namespace KartLibrary.Encrypt;

public static class Rho5Key
{
    private static byte[] _mem_F4CAD0 = new byte[2048]
    {
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 228, 10,
        168, 3, 124, 63, 27, 247, 81, 45, 56, 5,
        62, 61, 0, 0, 222, 182, 157, 87, 139, 63,
        5, 48, 251, 254, 9, 107, 56, 61, 0, 128,
        150, 222, 174, 112, 148, 63, 29, 225, 145, 12,
        120, 252, 57, 61, 0, 0, 62, 142, 46, 218,
        154, 63, 26, 112, 110, 158, 209, 27, 53, 61,
        0, 192, 89, 247, 216, 173, 160, 63, 161, 0,
        0, 9, 81, 42, 27, 61, 0, 0, 99, 198,
        247, 250, 163, 63, 63, 245, 129, 241, 98, 54,
        8, 61, 0, 192, 239, 89, 30, 23, 167, 63,
        219, 84, 207, 63, 26, 189, 22, 61, 0, 0,
        199, 2, 144, 62, 170, 63, 134, 211, 208, 200,
        87, 210, 33, 61, 0, 64, 195, 45, 51, 50,
        173, 63, 31, 68, 217, 248, 219, 122, 27, 61,
        0, 160, 214, 112, 17, 40, 176, 63, 118, 80,
        175, 40, 139, 243, 27, 61, 0, 96, 241, 236,
        31, 156, 177, 63, 212, 85, 83, 30, 63, 224,
        62, 61, 0, 192, 101, 253, 27, 21, 179, 63,
        149, 103, 140, 4, 128, 226, 55, 61, 0, 96,
        197, 128, 39, 147, 180, 63, 243, 165, 98, 205,
        172, 196, 47, 61, 0, 128, 233, 94, 115, 5,
        182, 63, 159, 125, 161, 35, 207, 195, 23, 61,
        0, 160, 74, 141, 119, 107, 183, 63, 122, 110,
        160, 18, 232, 3, 28, 61, 0, 192, 228, 78,
        11, 214, 184, 63, 130, 76, 78, 204, 229, 0,
        57, 61, 0, 64, 36, 34, 180, 51, 186, 63,
        53, 87, 103, 52, 112, 241, 54, 61, 0, 128,
        167, 84, 182, 149, 187, 63, 199, 78, 118, 36,
        94, 14, 41, 61, 0, 224, 233, 2, 38, 234,
        188, 63, 203, 203, 46, 130, 41, 209, 235, 60,
        0, 160, 108, 193, 180, 66, 190, 63, 233, 77,
        141, 243, 15, 229, 37, 61, 0, 96, 106, 177,
        5, 141, 191, 63, 167, 119, 183, 162, 165, 142,
        42, 61, 0, 32, 60, 197, 155, 109, 192, 63,
        69, 250, 225, 238, 141, 129, 50, 61, 0, 0,
        222, 172, 62, 13, 193, 63, 174, 240, 131, 203,
        69, 138, 30, 61, 0, 208, 116, 21, 63, 184,
        193, 63, 212, 255, 147, 241, 25, 11, 1, 61,
        0, 208, 79, 5, 254, 81, 194, 63, 192, 119,
        40, 64, 9, 172, 254, 60, 0, 224, 244, 28,
        48, 247, 194, 63, 65, 99, 26, 13, 199, 245,
        48, 61, 0, 80, 121, 15, 112, 148, 195, 63,
        100, 114, 26, 121, 63, 233, 31, 61, 0, 160,
        180, 83, 116, 41, 196, 63, 52, 75, 188, 197,
        9, 206, 62, 61, 0, 192, 254, 250, 36, 202,
        196, 63, 81, 104, 230, 66, 67, 32, 46, 61,
        0, 48, 9, 18, 117, 98, 197, 63, 45, 23,
        170, 179, 236, 223, 48, 61, 0, 0, 246, 26,
        26, 242, 197, 63, 19, 97, 62, 45, 27, 239,
        63, 61, 0, 0, 144, 22, 162, 141, 198, 63,
        208, 153, 150, 252, 44, 148, 237, 60, 0, 0,
        40, 108, 88, 32, 199, 63, 205, 84, 64, 98,
        168, 32, 61, 61, 0, 80, 28, 255, 149, 180,
        199, 63, 197, 51, 145, 104, 44, 1, 37, 61,
        0, 160, 206, 102, 162, 63, 200, 63, 159, 35,
        135, 134, 193, 198, 32, 61, 0, 240, 86, 12,
        14, 204, 200, 63, 223, 160, 207, 161, 180, 227,
        54, 61, 0, 208, 231, 239, 223, 89, 201, 63,
        229, 224, 255, 122, 2, 32, 36, 61, 0, 192,
        210, 71, 31, 233, 201, 63, 32, 36, 242, 108,
        14, 51, 53, 61, 0, 64, 3, 139, 164, 110,
        202, 63, 127, 91, 43, 185, 172, 235, 51, 61,
        0, 240, 82, 197, 183, 0, 203, 63, 115, 170,
        100, 76, 105, 244, 61, 61, 0, 112, 249, 124,
        230, 136, 203, 63, 114, 160, 120, 34, 35, 255,
        50, 61, 0, 64, 46, 186, 227, 6, 204, 63,
        124, 189, 85, 205, 21, 203, 50, 61, 0, 0,
        108, 212, 157, 145, 204, 63, 114, 172, 230, 148,
        70, 182, 14, 61, 0, 144, 19, 97, 251, 17,
        205, 63, 11, 150, 174, 145, 219, 52, 26, 61,
        0, 16, 253, 171, 89, 159, 205, 63, 115, 108,
        215, 188, 35, 123, 32, 61, 0, 96, 126, 82,
        61, 22, 206, 63, 228, 147, 46, 242, 105, 157,
        49, 61, 0, 160, 2, 220, 44, 154, 206, 63,
        135, 241, 129, 144, 245, 235, 32, 61, 0, 144,
        148, 118, 88, 31, 207, 63, 0, 144, 23, 234,
        235, 175, 7, 61, 0, 112, 219, 31, 128, 153,
        207, 63, 104, 150, 242, 247, 125, 115, 34, 61,
        0, 208, 9, 69, 91, 10, 208, 63, 127, 37,
        83, 35, 91, 107, 31, 61, 0, 232, 251, 55,
        128, 72, 208, 63, 198, 18, 185, 185, 147, 106,
        27, 61, 0, 168, 33, 86, 49, 135, 208, 63,
        174, 243, 191, 125, 218, 97, 50, 61, 0, 184,
        106, 29, 113, 198, 208, 63, 50, 193, 48, 141,
        74, 233, 53, 61, 0, 168, 210, 205, 217, 255,
        208, 63, 128, 157, 241, 246, 14, 53, 22, 61,
        0, 120, 194, 190, 47, 64, 209, 63, 139, 186,
        34, 66, 32, 60, 49, 61, 0, 144, 105, 25,
        151, 122, 209, 63, 153, 92, 45, 33, 121, 242,
        33, 61, 0, 88, 172, 48, 122, 181, 209, 63,
        126, 132, 255, 98, 62, 207, 61, 61, 0, 184,
        58, 21, 219, 240, 209, 63, 223, 14, 12, 35,
        46, 88, 39, 61, 0, 72, 66, 79, 14, 38,
        210, 63, 249, 31, 164, 40, 16, 126, 21, 61,
        0, 120, 17, 166, 98, 98, 210, 63, 18, 25,
        12, 46, 26, 176, 18, 61, 0, 216, 67, 192,
        113, 152, 210, 63, 121, 55, 158, 172, 105, 57,
        43, 61, 0, 128, 11, 118, 193, 213, 210, 63,
        191, 8, 15, 190, 222, 234, 58, 61, 0, 48,
        187, 167, 179, 12, 211, 63, 50, 216, 182, 25,
        153, 146, 56, 61, 0, 120, 159, 80, 19, 68,
        211, 63, 88, 179, 18, 31, 49, 239, 31, 61,
        0, 0, 0, 0, 0, 192, 219, 63, 0, 0,
        0, 0, 0, 192, 219, 63, 0, 0, 0, 0,
        0, 81, 219, 63, 0, 0, 0, 0, 0, 81,
        219, 63, 0, 0, 0, 0, 240, 232, 218, 63,
        0, 0, 0, 0, 240, 232, 218, 63, 0, 0,
        0, 0, 224, 128, 218, 63, 0, 0, 0, 0,
        224, 128, 218, 63, 0, 0, 0, 0, 192, 31,
        218, 63, 0, 0, 0, 0, 192, 31, 218, 63,
        0, 0, 0, 0, 160, 190, 217, 63, 0, 0,
        0, 0, 160, 190, 217, 63, 0, 0, 0, 0,
        128, 93, 217, 63, 0, 0, 0, 0, 128, 93,
        217, 63, 0, 0, 0, 0, 80, 3, 217, 63,
        0, 0, 0, 0, 80, 3, 217, 63, 0, 0,
        0, 0, 32, 169, 216, 63, 0, 0, 0, 0,
        32, 169, 216, 63, 0, 0, 0, 0, 224, 85,
        216, 63, 0, 0, 0, 0, 224, 85, 216, 63,
        0, 0, 0, 0, 40, 255, 215, 63, 0, 0,
        0, 0, 40, 255, 215, 63, 0, 0, 0, 0,
        96, 175, 215, 63, 0, 0, 0, 0, 96, 175,
        215, 63, 0, 0, 0, 0, 152, 95, 215, 63,
        0, 0, 0, 0, 152, 95, 215, 63, 0, 0,
        0, 0, 208, 15, 215, 63, 0, 0, 0, 0,
        208, 15, 215, 63, 0, 0, 0, 0, 128, 195,
        214, 63, 0, 0, 0, 0, 128, 195, 214, 63,
        0, 0, 0, 0, 168, 122, 214, 63, 0, 0,
        0, 0, 168, 122, 214, 63, 0, 0, 0, 0,
        208, 49, 214, 63, 0, 0, 0, 0, 208, 49,
        214, 63, 0, 0, 0, 0, 112, 236, 213, 63,
        0, 0, 0, 0, 112, 236, 213, 63, 0, 0,
        0, 0, 16, 167, 213, 63, 0, 0, 0, 0,
        16, 167, 213, 63, 0, 0, 0, 0, 40, 101,
        213, 63, 0, 0, 0, 0, 40, 101, 213, 63,
        0, 0, 0, 0, 64, 35, 213, 63, 0, 0,
        0, 0, 64, 35, 213, 63, 0, 0, 0, 0,
        208, 228, 212, 63, 0, 0, 0, 0, 208, 228,
        212, 63, 0, 0, 0, 0, 96, 166, 212, 63,
        0, 0, 0, 0, 96, 166, 212, 63, 0, 0,
        0, 0, 104, 107, 212, 63, 0, 0, 0, 0,
        104, 107, 212, 63, 0, 0, 0, 0, 248, 44,
        212, 63, 0, 0, 0, 0, 248, 44, 212, 63,
        0, 0, 0, 0, 120, 245, 211, 63, 0, 0,
        0, 0, 120, 245, 211, 63, 0, 0, 0, 0,
        128, 186, 211, 63, 0, 0, 0, 0, 128, 186,
        211, 63, 0, 0, 0, 0, 0, 131, 211, 63,
        0, 0, 0, 0, 0, 131, 211, 63, 0, 0,
        0, 0, 248, 78, 211, 63, 0, 0, 0, 0,
        248, 78, 211, 63, 0, 0, 0, 0, 120, 23,
        211, 63, 0, 0, 0, 0, 120, 23, 211, 63,
        0, 0, 0, 0, 112, 227, 210, 63, 0, 0,
        0, 0, 112, 227, 210, 63, 0, 0, 0, 0,
        224, 178, 210, 63, 0, 0, 0, 0, 224, 178,
        210, 63, 0, 0, 0, 0, 216, 126, 210, 63,
        0, 0, 0, 0, 216, 126, 210, 63, 0, 0,
        0, 0, 72, 78, 210, 63, 0, 0, 0, 0,
        72, 78, 210, 63, 0, 0, 0, 0, 184, 29,
        210, 63, 0, 0, 0, 0, 184, 29, 210, 63,
        0, 0, 0, 0, 160, 240, 209, 63, 0, 0,
        0, 0, 160, 240, 209, 63, 0, 0, 0, 0,
        136, 195, 209, 63, 0, 0, 0, 0, 136, 195,
        209, 63, 0, 0, 0, 0, 112, 150, 209, 63,
        0, 0, 0, 0, 112, 150, 209, 63, 0, 0,
        0, 0, 88, 105, 209, 63, 0, 0, 0, 0,
        88, 105, 209, 63, 0, 0, 0, 0, 184, 63,
        209, 63, 0, 0, 0, 0, 184, 63, 209, 63,
        0, 0, 0, 0, 160, 18, 209, 63, 0, 0,
        0, 0, 160, 18, 209, 63, 0, 0, 0, 0,
        0, 233, 208, 63, 0, 0, 0, 0, 0, 233,
        208, 63, 0, 0, 0, 0, 216, 194, 208, 63,
        0, 0, 0, 0, 216, 194, 208, 63, 0, 0,
        0, 0, 56, 153, 208, 63, 0, 0, 0, 0,
        56, 153, 208, 63, 0, 0, 0, 0, 16, 115,
        208, 63, 0, 0, 0, 0, 16, 115, 208, 63,
        0, 0, 0, 0, 112, 73, 208, 63, 0, 0,
        0, 0, 112, 73, 208, 63, 0, 0, 0, 0,
        192, 38, 208, 63, 0, 0, 0, 0, 192, 38,
        208, 63, 0, 0, 0, 0, 152, 0, 208, 63,
        0, 0, 0, 0, 152, 0, 208, 63, 0, 0,
        0, 0, 224, 180, 207, 63, 0, 0, 0, 0,
        224, 180, 207, 63, 0, 0, 0, 0, 128, 111,
        207, 63, 0, 0, 0, 0, 128, 111, 207, 63,
        0, 0, 0, 0, 32, 42, 207, 63, 0, 0,
        0, 0, 32, 42, 207, 63, 0, 0, 0, 0,
        192, 228, 206, 63, 0, 0, 0, 0, 192, 228,
        206, 63, 0, 0, 0, 0, 96, 159, 206, 63,
        0, 0, 0, 0, 96, 159, 206, 63, 0, 0,
        0, 0, 0, 90, 206, 63, 0, 0, 0, 0,
        0, 90, 206, 63, 0, 0, 0, 0, 144, 27,
        206, 63, 0, 0, 0, 0, 144, 27, 206, 63,
        0, 0, 0, 0, 48, 214, 205, 63, 0, 0,
        0, 0, 48, 214, 205, 63, 0, 0, 0, 0,
        192, 151, 205, 63, 0, 0, 0, 0, 192, 151,
        205, 63, 0, 0, 0, 0, 80, 89, 205, 63,
        0, 0, 0, 0, 80, 89, 205, 63, 0, 0,
        0, 0, 224, 26, 205, 63, 0, 0, 0, 0,
        224, 26, 205, 63, 0, 0, 0, 0, 96, 227,
        204, 63, 0, 0, 0, 0, 96, 227, 204, 63,
        0, 0, 0, 0, 240, 164, 204, 63, 0, 0,
        0, 0, 240, 164, 204, 63, 0, 0, 0, 0,
        112, 109, 204, 63, 0, 0, 0, 0, 112, 109,
        204, 63, 0, 0, 0, 0, 0, 47, 204, 63,
        0, 0, 0, 0, 0, 47, 204, 63
    };

    private static byte[] _mem_F4CEE0 = new byte[2048]
    {
        0, 0, 0, 0, 0, 192, 219, 63, 0, 0,
        0, 0, 0, 192, 219, 63, 0, 0, 0, 0,
        0, 81, 219, 63, 0, 0, 0, 0, 0, 81,
        219, 63, 0, 0, 0, 0, 240, 232, 218, 63,
        0, 0, 0, 0, 240, 232, 218, 63, 0, 0,
        0, 0, 224, 128, 218, 63, 0, 0, 0, 0,
        224, 128, 218, 63, 0, 0, 0, 0, 192, 31,
        218, 63, 0, 0, 0, 0, 192, 31, 218, 63,
        0, 0, 0, 0, 160, 190, 217, 63, 0, 0,
        0, 0, 160, 190, 217, 63, 0, 0, 0, 0,
        128, 93, 217, 63, 0, 0, 0, 0, 128, 93,
        217, 63, 0, 0, 0, 0, 80, 3, 217, 63,
        0, 0, 0, 0, 80, 3, 217, 63, 0, 0,
        0, 0, 32, 169, 216, 63, 0, 0, 0, 0,
        32, 169, 216, 63, 0, 0, 0, 0, 224, 85,
        216, 63, 0, 0, 0, 0, 224, 85, 216, 63,
        0, 0, 0, 0, 40, 255, 215, 63, 0, 0,
        0, 0, 40, 255, 215, 63, 0, 0, 0, 0,
        96, 175, 215, 63, 0, 0, 0, 0, 96, 175,
        215, 63, 0, 0, 0, 0, 152, 95, 215, 63,
        0, 0, 0, 0, 152, 95, 215, 63, 0, 0,
        0, 0, 208, 15, 215, 63, 0, 0, 0, 0,
        208, 15, 215, 63, 0, 0, 0, 0, 128, 195,
        214, 63, 0, 0, 0, 0, 128, 195, 214, 63,
        0, 0, 0, 0, 168, 122, 214, 63, 0, 0,
        0, 0, 168, 122, 214, 63, 0, 0, 0, 0,
        208, 49, 214, 63, 0, 0, 0, 0, 208, 49,
        214, 63, 0, 0, 0, 0, 112, 236, 213, 63,
        0, 0, 0, 0, 112, 236, 213, 63, 0, 0,
        0, 0, 16, 167, 213, 63, 0, 0, 0, 0,
        16, 167, 213, 63, 0, 0, 0, 0, 40, 101,
        213, 63, 0, 0, 0, 0, 40, 101, 213, 63,
        0, 0, 0, 0, 64, 35, 213, 63, 0, 0,
        0, 0, 64, 35, 213, 63, 0, 0, 0, 0,
        208, 228, 212, 63, 0, 0, 0, 0, 208, 228,
        212, 63, 0, 0, 0, 0, 96, 166, 212, 63,
        0, 0, 0, 0, 96, 166, 212, 63, 0, 0,
        0, 0, 104, 107, 212, 63, 0, 0, 0, 0,
        104, 107, 212, 63, 0, 0, 0, 0, 248, 44,
        212, 63, 0, 0, 0, 0, 248, 44, 212, 63,
        0, 0, 0, 0, 120, 245, 211, 63, 0, 0,
        0, 0, 120, 245, 211, 63, 0, 0, 0, 0,
        128, 186, 211, 63, 0, 0, 0, 0, 128, 186,
        211, 63, 0, 0, 0, 0, 0, 131, 211, 63,
        0, 0, 0, 0, 0, 131, 211, 63, 0, 0,
        0, 0, 248, 78, 211, 63, 0, 0, 0, 0,
        248, 78, 211, 63, 0, 0, 0, 0, 120, 23,
        211, 63, 0, 0, 0, 0, 120, 23, 211, 63,
        0, 0, 0, 0, 112, 227, 210, 63, 0, 0,
        0, 0, 112, 227, 210, 63, 0, 0, 0, 0,
        224, 178, 210, 63, 0, 0, 0, 0, 224, 178,
        210, 63, 0, 0, 0, 0, 216, 126, 210, 63,
        0, 0, 0, 0, 216, 126, 210, 63, 0, 0,
        0, 0, 72, 78, 210, 63, 0, 0, 0, 0,
        72, 78, 210, 63, 0, 0, 0, 0, 184, 29,
        210, 63, 0, 0, 0, 0, 184, 29, 210, 63,
        0, 0, 0, 0, 160, 240, 209, 63, 0, 0,
        0, 0, 160, 240, 209, 63, 0, 0, 0, 0,
        136, 195, 209, 63, 0, 0, 0, 0, 136, 195,
        209, 63, 0, 0, 0, 0, 112, 150, 209, 63,
        0, 0, 0, 0, 112, 150, 209, 63, 0, 0,
        0, 0, 88, 105, 209, 63, 0, 0, 0, 0,
        88, 105, 209, 63, 0, 0, 0, 0, 184, 63,
        209, 63, 0, 0, 0, 0, 184, 63, 209, 63,
        0, 0, 0, 0, 160, 18, 209, 63, 0, 0,
        0, 0, 160, 18, 209, 63, 0, 0, 0, 0,
        0, 233, 208, 63, 0, 0, 0, 0, 0, 233,
        208, 63, 0, 0, 0, 0, 216, 194, 208, 63,
        0, 0, 0, 0, 216, 194, 208, 63, 0, 0,
        0, 0, 56, 153, 208, 63, 0, 0, 0, 0,
        56, 153, 208, 63, 0, 0, 0, 0, 16, 115,
        208, 63, 0, 0, 0, 0, 16, 115, 208, 63,
        0, 0, 0, 0, 112, 73, 208, 63, 0, 0,
        0, 0, 112, 73, 208, 63, 0, 0, 0, 0,
        192, 38, 208, 63, 0, 0, 0, 0, 192, 38,
        208, 63, 0, 0, 0, 0, 152, 0, 208, 63,
        0, 0, 0, 0, 152, 0, 208, 63, 0, 0,
        0, 0, 224, 180, 207, 63, 0, 0, 0, 0,
        224, 180, 207, 63, 0, 0, 0, 0, 128, 111,
        207, 63, 0, 0, 0, 0, 128, 111, 207, 63,
        0, 0, 0, 0, 32, 42, 207, 63, 0, 0,
        0, 0, 32, 42, 207, 63, 0, 0, 0, 0,
        192, 228, 206, 63, 0, 0, 0, 0, 192, 228,
        206, 63, 0, 0, 0, 0, 96, 159, 206, 63,
        0, 0, 0, 0, 96, 159, 206, 63, 0, 0,
        0, 0, 0, 90, 206, 63, 0, 0, 0, 0,
        0, 90, 206, 63, 0, 0, 0, 0, 144, 27,
        206, 63, 0, 0, 0, 0, 144, 27, 206, 63,
        0, 0, 0, 0, 48, 214, 205, 63, 0, 0,
        0, 0, 48, 214, 205, 63, 0, 0, 0, 0,
        192, 151, 205, 63, 0, 0, 0, 0, 192, 151,
        205, 63, 0, 0, 0, 0, 80, 89, 205, 63,
        0, 0, 0, 0, 80, 89, 205, 63, 0, 0,
        0, 0, 224, 26, 205, 63, 0, 0, 0, 0,
        224, 26, 205, 63, 0, 0, 0, 0, 96, 227,
        204, 63, 0, 0, 0, 0, 96, 227, 204, 63,
        0, 0, 0, 0, 240, 164, 204, 63, 0, 0,
        0, 0, 240, 164, 204, 63, 0, 0, 0, 0,
        112, 109, 204, 63, 0, 0, 0, 0, 112, 109,
        204, 63, 0, 0, 0, 0, 0, 47, 204, 63,
        0, 0, 0, 0, 0, 47, 204, 63, 0, 0,
        0, 0, 128, 247, 203, 63, 0, 0, 0, 0,
        128, 247, 203, 63, 0, 0, 0, 0, 0, 192,
        203, 63, 0, 0, 0, 0, 0, 192, 203, 63,
        112, 111, 119, 0, 0, 0, 0, 0, 0, 0,
        224, 63, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 240, 63, 0, 0, 0, 0, 128, 192,
        239, 63, 0, 0, 0, 0, 0, 130, 239, 63,
        0, 0, 0, 0, 128, 68, 239, 63, 0, 0,
        0, 0, 192, 7, 239, 63, 0, 0, 0, 0,
        0, 204, 238, 63, 0, 0, 0, 0, 64, 145,
        238, 63, 0, 0, 0, 0, 64, 87, 238, 63,
        0, 0, 0, 0, 0, 30, 238, 63, 0, 0,
        0, 0, 192, 229, 237, 63, 0, 0, 0, 0,
        128, 174, 237, 63, 0, 0, 0, 0, 192, 119,
        237, 63, 0, 0, 0, 0, 192, 65, 237, 63,
        0, 0, 0, 0, 192, 12, 237, 63, 0, 0,
        0, 0, 64, 216, 236, 63, 0, 0, 0, 0,
        192, 164, 236, 63, 0, 0, 0, 0, 192, 113,
        236, 63, 0, 0, 0, 0, 128, 63, 236, 63,
        0, 0, 0, 0, 0, 14, 236, 63, 0, 0,
        0, 0, 64, 221, 235, 63, 0, 0, 0, 0,
        0, 173, 235, 63, 0, 0, 0, 0, 128, 125,
        235, 63, 0, 0, 0, 0, 128, 78, 235, 63,
        0, 0, 0, 0, 64, 32, 235, 63, 0, 0,
        0, 0, 128, 242, 234, 63, 0, 0, 0, 0,
        128, 197, 234, 63, 0, 0, 0, 0, 0, 153,
        234, 63, 0, 0, 0, 0, 0, 109, 234, 63,
        0, 0, 0, 0, 192, 65, 234, 63, 0, 0,
        0, 0, 192, 22, 234, 63, 0, 0, 0, 0,
        128, 236, 233, 63, 0, 0, 0, 0, 192, 194,
        233, 63, 0, 0, 0, 0, 128, 153, 233, 63,
        0, 0, 0, 0, 0, 113, 233, 63, 0, 0,
        0, 0, 192, 72, 233, 63, 0, 0, 0, 0,
        0, 33, 233, 63, 0, 0, 0, 0, 192, 249,
        232, 63, 0, 0, 0, 0, 0, 211, 232, 63,
        0, 0, 0, 0, 192, 172, 232, 63, 0, 0,
        0, 0, 0, 135, 232, 63, 0, 0, 0, 0,
        128, 97, 232, 63, 0, 0, 0, 0, 128, 60,
        232, 63, 0, 0, 0, 0, 0, 24, 232, 63,
        0, 0, 0, 0, 0, 244, 231, 63, 0, 0,
        0, 0, 64, 208, 231, 63, 0, 0, 0, 0,
        64, 173, 231, 63, 0, 0, 0, 0, 64, 138,
        231, 63, 0, 0, 0, 0, 192, 103, 231, 63,
        0, 0, 0, 0, 192, 69, 231, 63, 0, 0,
        0, 0, 64, 36, 231, 63, 0, 0, 0, 0,
        0, 3, 231, 63, 0, 0, 0, 0, 0, 226,
        230, 63, 0, 0, 0, 0, 128, 193, 230, 63,
        0, 0, 0, 0, 64, 161, 230, 63, 0, 0,
        0, 0, 128, 129, 230, 63, 0, 0, 0, 0,
        0, 98, 230, 63, 0, 0, 0, 0, 192, 66,
        230, 63, 0, 0, 0, 0, 0, 36, 230, 63,
        0, 0, 0, 0, 128, 5, 230, 63, 0, 0,
        0, 0, 64, 231, 229, 63, 0, 0, 0, 0,
        128, 201, 229, 63, 0, 0, 0, 0, 0, 172,
        229, 63, 0, 0, 0, 0, 192, 142, 229, 63,
        0, 0, 0, 0, 0, 114, 229, 63, 0, 0,
        0, 0, 64, 85, 229, 63, 0, 0, 0, 0,
        0, 57, 229, 63, 0, 0, 0, 0, 0, 29,
        229, 63, 0, 0, 0, 0, 64, 1, 229, 63,
        0, 0, 0, 0, 0, 230, 228, 63, 0, 0,
        0, 0, 192, 202, 228, 63, 0, 0, 0, 0,
        192, 175, 228, 63, 0, 0, 0, 0, 64, 149,
        228, 63, 0, 0, 0, 0, 0, 123, 228, 63,
        0, 0, 0, 0, 192, 96, 228, 63, 0, 0,
        0, 0, 0, 71, 228, 63, 0, 0, 0, 0,
        128, 45, 228, 63, 0, 0, 0, 0, 0, 20,
        228, 63, 0, 0, 0, 0, 0, 251, 227, 63,
        0, 0, 0, 0, 64, 226, 227, 63, 0, 0,
        0, 0, 128, 201, 227, 63, 0, 0, 0, 0,
        64, 177, 227, 63, 0, 0, 0, 0, 0, 153,
        227, 63, 0, 0, 0, 0, 64, 129, 227, 63,
        0, 0, 0, 0, 128, 105, 227, 63, 0, 0,
        0, 0, 0, 82, 227, 63, 0, 0, 0, 0,
        0, 59, 227, 63, 0, 0, 0, 0, 0, 36,
        227, 63, 0, 0, 0, 0, 0, 13, 227, 63,
        0, 0, 0, 0, 128, 246, 226, 63, 0, 0,
        0, 0, 64, 224, 226, 63, 0, 0, 0, 0,
        0, 202, 226, 63, 0, 0, 0, 0, 0, 180,
        226, 63, 0, 0, 0, 0, 64, 158, 226, 63,
        0, 0, 0, 0, 192, 136, 226, 63, 0, 0,
        0, 0, 64, 115, 226, 63, 0, 0, 0, 0,
        64, 94, 226, 63, 0, 0, 0, 0, 64, 73,
        226, 63, 0, 0, 0, 0, 64, 52, 226, 63,
        0, 0, 0, 0, 192, 31, 226, 63, 0, 0,
        0, 0, 64, 11, 226, 63, 0, 0, 0, 0,
        0, 247, 225, 63, 0, 0, 0, 0, 0, 227,
        225, 63, 0, 0, 0, 0, 0, 207, 225, 63,
        0, 0, 0, 0, 64, 187, 225, 63, 0, 0,
        0, 0, 192, 167, 225, 63, 0, 0, 0, 0,
        64, 148, 225, 63, 0, 0, 0, 0, 0, 129,
        225, 63, 0, 0, 0, 0, 0, 110, 225, 63,
        0, 0, 0, 0, 0, 91, 225, 63, 0, 0,
        0, 0, 64, 72, 225, 63, 0, 0, 0, 0,
        192, 53, 225, 63, 0, 0, 0, 0, 64, 35,
        225, 63, 0, 0, 0, 0, 0, 17, 225, 63,
        0, 0, 0, 0, 0, 255, 224, 63, 0, 0,
        0, 0, 0, 237, 224, 63, 0, 0, 0, 0,
        64, 219, 224, 63, 0, 0, 0, 0, 128, 201,
        224, 63, 0, 0, 0, 0, 0, 184, 224, 63,
        0, 0, 0, 0, 128, 166, 224, 63, 0, 0,
        0, 0, 64, 149, 224, 63, 0, 0, 0, 0,
        64, 132, 224, 63, 0, 0, 0, 0, 64, 115,
        224, 63, 0, 0, 0, 0, 64, 98, 224, 63,
        0, 0, 0, 0, 128, 81, 224, 63
    };

    private static byte[] _mem_F4A370 = new byte[112]
    {
        0, 0, 0, 0, 0, 0, 0, 0, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 240, 63,
        0, 0, 0, 0, 0, 0, 240, 63, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        48, 67, 0, 0, 0, 0, 0, 0, 48, 67,
        0, 0, 0, 0, 0, 0, 240, 255, 0, 0,
        0, 0, 0, 0, 240, 127, 1, 0, 0, 0,
        0, 0, 240, 127, 1, 0, 0, 0, 0, 0,
        240, 127
    };

    private static byte[] _mem_F4A300 = new byte[2048]
    {
        0, 0, 0, 0, 2, 0, 0, 0, 0, 0,
        0, 0, 2, 0, 0, 0, 0, 0, 0, 0,
        2, 0, 0, 0, 1, 0, 0, 0, 2, 0,
        0, 0, 255, 255, 255, 255, 255, 255, 15, 0,
        255, 255, 255, 255, 255, 255, 15, 0, 0, 0,
        0, 0, 0, 192, 219, 63, 0, 0, 0, 0,
        0, 192, 219, 63, 16, 248, 255, 255, 255, 255,
        143, 66, 16, 248, 255, 255, 255, 255, 143, 66,
        0, 0, 0, 128, 255, 255, 255, 127, 0, 0,
        0, 128, 255, 255, 255, 127, 0, 120, 159, 80,
        19, 68, 211, 63, 88, 179, 18, 31, 49, 239,
        31, 61, 0, 0, 0, 0, 0, 0, 0, 0,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        240, 63, 0, 0, 0, 0, 0, 0, 240, 63,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 48, 67, 0, 0, 0, 0, 0, 0,
        48, 67, 0, 0, 0, 0, 0, 0, 240, 255,
        0, 0, 0, 0, 0, 0, 240, 127, 1, 0,
        0, 0, 0, 0, 240, 127, 1, 0, 0, 0,
        0, 0, 240, 127, 249, 206, 151, 198, 20, 137,
        53, 64, 61, 129, 41, 100, 9, 147, 8, 192,
        85, 132, 53, 106, 128, 201, 37, 192, 210, 53,
        150, 220, 2, 106, 252, 63, 247, 153, 24, 126,
        159, 171, 22, 64, 53, 177, 119, 220, 242, 122,
        242, 191, 8, 65, 46, 191, 108, 122, 90, 63,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 56, 67, 0, 0, 0, 0,
        0, 0, 56, 67, 255, 255, 255, 255, 255, 255,
        15, 0, 255, 255, 255, 255, 255, 255, 15, 0,
        0, 0, 0, 0, 0, 0, 240, 63, 0, 0,
        0, 0, 0, 0, 240, 63, 255, 255, 255, 255,
        255, 255, 255, 127, 255, 255, 255, 255, 255, 255,
        255, 127, 49, 103, 138, 231, 127, 216, 85, 63,
        191, 160, 4, 215, 8, 107, 172, 63, 119, 78,
        186, 111, 171, 178, 131, 63, 142, 197, 130, 255,
        189, 191, 206, 63, 239, 57, 250, 254, 66, 46,
        230, 63, 0, 0, 0, 248, 255, 255, 255, 255,
        0, 0, 0, 64, 71, 21, 247, 191, 1, 0,
        0, 0, 0, 0, 240, 127, 0, 0, 0, 0,
        0, 0, 240, 127, 0, 0, 0, 0, 0, 0,
        240, 255, 0, 0, 0, 0, 0, 0, 0, 128,
        0, 0, 0, 0, 0, 0, 224, 255, 0, 0,
        0, 0, 0, 0, 224, 127, 0, 0, 0, 0,
        0, 0, 16, 0, 0, 0, 0, 0, 0, 0,
        248, 255, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 240, 63, 0, 0,
        0, 0, 0, 0, 240, 63, 51, 4, 0, 0,
        0, 0, 0, 0, 51, 4, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 240, 191,
        0, 0, 0, 0, 0, 0, 48, 67, 0, 0,
        0, 0, 0, 0, 0, 128, 0, 0, 0, 0,
        0, 0, 0, 128, 255, 7, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        85, 85, 85, 85, 85, 85, 197, 191, 0, 0,
        0, 0, 0, 0, 224, 191, 17, 17, 17, 17,
        17, 17, 129, 63, 85, 85, 85, 85, 85, 85,
        165, 63, 26, 160, 1, 26, 160, 1, 42, 191,
        23, 108, 193, 22, 108, 193, 86, 191, 52, 199,
        86, 165, 227, 29, 199, 62, 26, 160, 1, 26,
        160, 1, 250, 62, 131, 200, 201, 109, 48, 95,
        36, 64, 0, 0, 0, 0, 0, 0, 56, 67,
        0, 0, 96, 26, 97, 180, 144, 61, 0, 0,
        96, 26, 97, 180, 144, 61, 0, 0, 64, 84,
        251, 33, 185, 63, 115, 112, 3, 46, 138, 25,
        99, 59, 0, 0, 0, 0, 0, 0, 96, 67,
        0, 0, 0, 0, 0, 0, 128, 60, 255, 255,
        255, 255, 255, 255, 239, 63, 0, 0, 0, 0,
        0, 0, 0, 128, 0, 0, 0, 0, 0, 0,
        240, 63, 0, 0, 0, 0, 0, 0, 240, 191,
        85, 85, 85, 85, 85, 85, 197, 191, 0, 0,
        0, 0, 0, 0, 224, 191, 17, 17, 17, 17,
        17, 17, 129, 63, 85, 85, 85, 85, 85, 85,
        165, 63, 26, 160, 1, 26, 160, 1, 42, 191,
        23, 108, 193, 22, 108, 193, 86, 191, 52, 199,
        86, 165, 227, 29, 199, 62, 26, 160, 1, 26,
        160, 1, 250, 62, 131, 200, 201, 109, 48, 95,
        36, 64, 0, 0, 0, 0, 0, 0, 56, 67,
        0, 0, 96, 26, 97, 180, 144, 61, 0, 0,
        96, 26, 97, 180, 144, 61, 0, 0, 64, 84,
        251, 33, 185, 63, 115, 112, 3, 46, 138, 25,
        99, 59, 0, 0, 0, 0, 0, 0, 96, 67,
        0, 0, 0, 0, 0, 0, 128, 60, 255, 255,
        255, 255, 255, 255, 239, 63, 0, 0, 0, 0,
        0, 0, 0, 128, 0, 0, 0, 0, 0, 0,
        240, 63, 0, 0, 0, 0, 0, 0, 240, 191,
        255, 255, 255, 255, 255, 255, 255, 127, 0, 0,
        0, 0, 0, 0, 0, 0, 6, 0, 0, 6,
        0, 1, 0, 0, 16, 0, 3, 6, 0, 6,
        2, 16, 4, 69, 69, 69, 5, 5, 5, 5,
        5, 53, 48, 0, 80, 0, 0, 0, 0, 40,
        32, 56, 80, 88, 7, 8, 0, 55, 48, 48,
        87, 80, 7, 0, 0, 32, 32, 8, 7, 0,
        0, 0, 8, 96, 104, 96, 96, 96, 96, 0,
        0, 120, 112, 120, 120, 120, 120, 8, 7, 8,
        7, 0, 7, 0, 8, 8, 8, 0, 0, 8,
        7, 8, 0, 7, 8, 0, 7, 0, 0, 0,
        0, 0, 6, 128, 128, 134, 128, 129, 128, 0,
        0, 16, 3, 134, 128, 134, 130, 128, 20, 5,
        5, 69, 69, 69, 133, 133, 133, 5, 0, 0,
        48, 48, 128, 80, 128, 136, 0, 8, 0, 40,
        39, 56, 80, 87, 128, 0, 7, 0, 55, 48,
        48, 80, 80, 136, 7, 0, 0, 32, 40, 128,
        136, 128, 128, 0, 0, 0, 96, 104, 96, 104,
        104, 104, 8, 8, 7, 120, 119, 112, 119, 112,
        112, 8, 8, 0, 0, 8, 7, 8, 0, 7,
        8, 0, 7, 0, 40, 110, 117, 108, 108, 41,
        0, 0, 40, 0, 110, 0, 117, 0, 108, 0,
        108, 0, 41, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 228, 11, 84, 2, 0, 0, 0,
        0, 0, 16, 99, 45, 94, 199, 107, 5, 0,
        0, 0, 0, 0, 0, 64, 234, 237, 116, 70,
        208, 156, 44, 159, 12, 0, 0, 0, 0, 97,
        245, 185, 171, 191, 164, 92, 195, 241, 41, 99,
        29, 0, 0, 0, 0, 0, 100, 181, 253, 52,
        5, 196, 210, 135, 102, 146, 249, 21, 59, 108,
        68, 0, 0, 0, 0, 0, 0, 16, 217, 144,
        101, 148, 44, 66, 98, 215, 1, 69, 34, 154,
        23, 38, 39, 79, 159, 0, 0, 0, 64, 2,
        149, 7, 193, 137, 86, 36, 28, 167, 250, 197,
        103, 109, 200, 115, 220, 109, 173, 235, 114, 1,
        0, 0, 0, 0, 193, 206, 100, 39, 162, 99,
        202, 24, 164, 239, 37, 123, 209, 205, 112, 239,
        223, 107, 31, 62, 234, 157, 95, 3, 0, 0,
        0, 0, 0, 228, 110, 254, 195, 205, 106, 12,
        188, 102, 50, 31, 57, 46, 3, 2, 69, 90,
        37, 248, 210, 113, 86, 74, 194, 195, 218, 7,
        0, 0, 16, 143, 46, 168, 8, 67, 178, 170,
        124, 26, 33, 142, 64, 206, 138, 243, 11, 206,
        196, 132, 39, 11, 235, 124, 195, 148, 37, 173,
        73, 18, 0, 0, 0, 64, 26, 221, 218, 84,
        159, 204, 191, 97, 89, 220, 171, 171, 92, 199,
        12, 68, 5, 245, 103, 22, 188, 209, 82, 175,
        183, 251, 41, 141, 143, 96, 148, 42, 0, 0,
        0, 0, 0, 33, 12, 138, 187, 23, 164, 142,
        175, 86, 169, 159, 71, 6, 54, 178, 75, 93,
        224, 95, 220, 128, 10, 170, 254, 240, 64, 217,
        142, 168, 208, 128, 26, 107, 35, 99, 0, 0,
        100, 56, 76, 50, 150, 199, 87, 131, 213, 66,
        74, 228, 97, 34, 169, 217, 61, 16, 60, 189,
        114, 243, 229, 145, 116, 21, 89, 192, 13, 166,
        29, 236, 108, 217, 42, 16, 211, 230, 0, 0,
        0, 16, 133, 30, 91, 97, 79, 110, 105, 42,
        123, 24, 28, 226, 80, 4, 43, 52, 221, 47,
        238, 39, 80, 99, 153, 113, 201, 166, 22, 233,
        74, 142, 40, 46, 8, 23, 111, 110, 73, 26,
        110, 25, 2, 0, 0, 0, 64, 50, 38, 64,
        173, 4, 80, 114, 30, 249, 213, 209, 148, 41,
        187, 205, 91, 102, 150, 46, 59, 162, 219, 125,
        250, 101, 172, 83, 222, 119, 155, 162, 32, 176,
        83, 249, 191, 198, 171, 37, 148, 75, 77, 227,
        4, 0, 129, 45, 195, 251, 244, 208, 34, 82,
        80, 40, 15, 183, 243, 242, 19, 87, 19, 20,
        66, 220, 125, 93, 57, 214, 153, 25, 89, 248,
        28, 56, 146, 0, 214, 20, 179, 134, 185, 119,
        165, 122, 97, 254, 183, 18, 106, 97, 11, 0,
        0, 228, 17, 29, 141, 103, 195, 86, 32, 31,
        148, 58, 139, 54, 9, 155, 8, 105, 112, 189,
        190, 101, 118, 32, 235, 196, 38, 155, 157, 232,
        103, 21, 110, 9, 21, 157, 43, 242, 50, 113,
        19, 81, 72, 190, 206, 162, 229, 69, 82, 127,
        26, 0, 0, 0, 16, 187, 120, 148, 247, 2,
        192, 116, 27, 140, 0, 93, 240, 176, 117, 198,
        219, 169, 20, 185, 217, 226, 223, 114, 15, 101,
        76, 75, 40, 119, 22, 224, 246, 109, 194, 145,
        67, 81, 207, 201, 149, 39, 85, 171, 226, 214,
        39, 230, 168, 156, 166, 177, 61, 0, 0, 0,
        0, 64, 74, 208, 236, 244, 240, 136, 35, 127,
        197, 109, 10, 88, 111, 4, 191, 67, 195, 93,
        45, 248, 72, 8, 17, 238, 28, 89, 160, 250,
        40, 240, 244, 205, 63, 165, 46, 25, 160, 113,
        214, 188, 135, 68, 105, 125, 1, 110, 249, 16,
        157, 86, 26, 121, 117, 164, 143, 0, 0, 225,
        178, 185, 60, 117, 136, 130, 147, 22, 63, 205,
        107, 58, 180, 137, 222, 135, 158, 8, 70, 69,
        77, 104, 12, 166, 219, 253, 145, 147, 36, 223,
        19, 236, 104, 48, 39, 68, 180, 153, 238, 65,
        129, 182, 195, 202, 2, 88, 241, 81, 104, 217,
        162, 37, 118, 125, 141, 113, 78, 1, 0, 0,
        100, 251, 230, 131, 90, 242, 15, 173, 87, 148,
        17, 181, 128, 0, 102, 181, 41, 32, 207, 210,
        197, 215, 125, 109, 63, 165, 28, 77, 183, 205,
        222, 112, 157, 218, 61, 65, 22, 183, 78, 202,
        208, 113, 152, 19, 228, 215, 144, 58, 64, 79,
        226, 63, 171, 249, 111, 119, 77, 38, 230, 175,
        10, 3, 0, 0, 0, 16, 49, 85, 171, 9,
        210, 88, 12, 166, 203, 38, 97, 86, 135, 131,
        28, 106, 193, 244, 135, 117, 118, 232, 68, 44,
        207, 71, 160, 65, 158, 5, 8, 201, 62, 6,
        186, 160, 232, 200, 207, 231, 85, 192, 250, 225,
        178, 68, 1, 239, 176, 126, 32, 36, 115, 37,
        114, 209, 129, 249, 184, 228, 174, 5, 21, 7,
        64, 98, 59, 122, 79, 93, 164, 206, 51, 65,
        226, 79, 109, 109, 15, 33, 242, 51, 86, 229,
        86, 19, 193, 37, 151, 215, 235, 40, 132, 235,
        150, 211, 119, 59, 73, 30, 174, 45, 31, 71,
        32, 56, 173, 150, 209, 206, 250, 138, 219, 205,
        222, 78, 134, 192, 104, 85, 161, 93, 105, 178,
        137, 60, 18, 36, 113, 69, 125, 16, 0, 0,
        65, 28, 39, 74, 23, 110, 87, 174, 98, 236,
        170, 137, 34, 239, 221, 251, 162, 182, 228, 239,
        225, 23, 242, 189, 102, 51, 128, 136, 180, 55,
        62, 44, 184, 191, 145, 222, 172, 25
    };

    public unsafe static byte[] GetPackedFileKey(byte[] fileChksum, int u1, string FileName)
    {
        if (!Sse2.IsSupported)
        {
            throw new NotSupportedException("Your computer is not support SSE2.");
        }

        byte[] bytes = Encoding.GetEncoding("UTF-16").GetBytes(FileName);
        uint num = (uint)u1;
        double num2 = (new double[2] { 0.0, 4294967296.0 })[u1 >>> 31];
        Vector128<double> left = Sse2.ConvertToVector128Double(Sse2.LoadVector128(&u1));
        Vector128<double> right = Sse2.LoadVector128(&num2);
        int num3 = Sse2.ConvertToInt32WithTruncation(func_E321D0(Sse2.AddScalar(left, right)));
        int[] array = new int[num3 + 1];
        int num4 = num3;
        while (num != 0)
        {
            uint num5 = (uint)((ulong)(3435973837L * (long)num >>> 32) >> 3);
            array[num4--] = (byte)num - (byte)(((num5 << 2) & 0xFF) + num5 << 1);
            num = num5;
        }

        byte[] array2 = new byte[128];
        for (num4 = 0; num4 < array2.Length; num4++)
        {
            int num6 = (sbyte)array[num4 % array.Length];
            num6 = (int)(num6 & 0x80000001u);
            if (num6 < 0)
            {
                num6 = ((num6 - 1) | -2) + 1;
            }

            sbyte num7 = (sbyte)array[(num4 + 1) % array.Length];
            int num8 = (int)(((sbyte)array[(num4 + 2) % array.Length] + num4) & 0x8000000Fu);
            if (num8 < 0)
            {
                num8 = ((num8 - 1) | -10) + 1;
            }

            int num9 = (num7 + num4) % 5;
            num9 = (sbyte)((num9 + fileChksum[num8] + num6) & 0xFF);
            num9 *= (sbyte)bytes[num4 % FileName.Length << 1];
            num9 += num4;
            array2[num4] = (byte)num9;
        }

        return array2;
    }

    private unsafe static Vector128<double> func_E321D0(Vector128<double> _inxmm0)
    {
        Vector128<double> vector = _inxmm0;
        double num = 0.0;
        Sse2.StoreLow(&num, vector);
        int num2 = 0;
        int num9;
        int num3;
        Vector128<double> vector2;
        Vector128<double> left;
        Vector128<double> left3;
        Vector128<double> right3;
        Vector128<double> right2;
        Vector128<double> left2;
        Vector128<double> right;
        while (true)
        {
            vector2 = vector;
            vector = Sse2.UnpackLow(vector, vector);
            vector2 = Sse2.ShiftRightLogical(vector2.AsInt64(), 52).AsDouble();
            num3 = Sse2.Extract(vector2.AsUInt16(), 0);
            long num4 = 4503599627370495L;
            long num5 = 4601482550521626624L;
            long num6 = 4796333603149576208L;
            long num7 = 9223372034707292160L;
            long num8 = 4607182418800017408L;
            right = LoadVector128LH((double*)(&num4));
            right2 = LoadVector128LH((double*)(&num5));
            right3 = LoadVector128LH((double*)(&num8));
            left = LoadVector128LH((double*)(&num6));
            left2 = LoadVector128LH((double*)(&num7));
            vector = Sse2.And(vector, right);
            vector = Sse2.Or(vector, right3);
            left = Sse2.Add(left, vector);
            num9 = Sse2.Extract(left.AsUInt16(), 0);
            num9 &= 0x7F0;
            left = LoadVector128FromByteArray(_mem_F4CEE0, num9);
            left3 = LoadVector128FromByteArray(_mem_F4CAD0, num9);
            left2 = Sse2.And(left2, vector);
            vector = Sse2.Subtract(vector, left2);
            left2 = Sse2.Multiply(left2, left);
            left2 = Sse2.Subtract(left2, right2);
            left3 = Sse2.AddScalar(left3, left2);
            vector = Sse2.Multiply(vector, left);
            left = vector;
            vector = Sse2.Add(vector, left2);
            num3 &= 0xFFF;
            num3--;
            if (num3 <= 2045)
            {
                break;
            }

            vector = Sse2.LoadLow(vector, &num);
        }

        num3 -= 1022;
        num3 += num2;
        left2 = Sse2.ConvertScalarToVector128Double(left2, num3);
        left2 = Sse2.UnpackLow(left2, left2);
        num3 <<= 10;
        num9 += num3;
        num3 = 16;
        num2 = 0;
        if (num9 == 0)
        {
            num2 = num3;
        }

        right = LoadVector128FromByteArray(_mem_F4A300, 224);
        right3 = vector;
        right2 = LoadVector128FromByteArray(_mem_F4A300, 240);
        right = Sse2.Multiply(right, vector);
        right3 = Sse2.Multiply(right3, right3);
        right = Sse2.Add(right, right2);
        right2 = LoadVector128FromByteArray(_mem_F4A300, 256);
        right3 = Sse2.MultiplyScalar(right3, right3);
        vector2 = LoadVector128FromByteArray(_mem_F4A300, 96);
        left2 = Sse2.Multiply(left2, vector2);
        vector2 = LoadVector128FromByteArray(_mem_F4A300, 112 + num2);
        left = Sse2.And(left, vector2);
        left3 = Sse2.Add(left3, left2);
        left3 = Sse2.Add(left3, left);
        right = Sse2.Multiply(right, vector);
        right3 = Sse2.MultiplyScalar(right3, vector);
        right = Sse2.Add(right, right2);
        right2 = LoadVector128FromByteArray(_mem_F4A300, 272);
        right2 = Sse2.Multiply(right2, vector);
        left2 = left3;
        left2 = Sse2.UnpackHigh(left2, left2);
        right = Sse2.Multiply(right, right3);
        vector = right;
        right = Sse2.Add(right, right2);
        vector = Sse2.UnpackHigh(vector, vector);
        vector = Sse2.AddScalar(vector, right);
        vector = Sse2.AddScalar(vector, left2);
        return Sse2.AddScalar(vector, left3);
    }

    private unsafe static Vector128<double> LoadVector128LH(double* address)
    {
        return Sse2.LoadHigh(Sse2.LoadVector128(address).AsDouble(), address);
    }

    private unsafe static Vector128<double> LoadVector128FromByteArray(byte[] arr, int index)
    {
        fixed (byte* ptr = arr)
        {
            return Sse2.LoadVector128(ptr + index).AsDouble();
        }
    }

    public static int GetFileKey_U1(string anotherData)
    {
        int num = -2128831035;
        for (int i = 0; i < anotherData.Length; i++)
        {
            num = (anotherData[i] ^ num) * 16777619;
        }

        return num;
    }
}